security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
            two_factor:
                # The route name you have used in the routes.yaml
                # https://symfony.com/doc/current/security/two-factor-authentication.html#two-factor-authentication
                auth_form_path: 2fa_login    
                check_path: 2fa_login_check
                trusted_parameter_name: _trusted      # Name of the parameter for the trusted device option 
            remember_me:
                secret: '%kernel.secret%' # Uses the APP_SECRET from .env.local
                lifetime: 5184000         # Lifetime of the "remember me" cookie in seconds (60 days)
                path: '/'                 # Path for which the cookie is valid

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/2fa, role: IS_AUTHENTICATED_2FA_IN_PROGRESS }

    role_hierarchy:
        # https://symfony.com/doc/current/security.html#role-hierarchy
        ROLE_AUTEUR: [ROLE_USER]
        ROLE_ADMIN: [ROLE_AUTEUR]
        ROLE_SUPERADMIN: [ROLE_ADMIN]

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
